@startuml
title 下单
"商户" -> "易付通" : 请求下单
"易付通" -> "OPR" : 请求OPR下单
"易付通" <-- "OPR" : 返回
"易付通" -> "收银台API" : 请求聚合支付下单
"易付通" <-- "收银台API" : 返回
"商户" <-- "易付通" : 返回支付链接
@enduml

@startuml
title 支付结果回调
actor 商户
"易付通" <- "订单处理器" : 支付结果通知
"商户" <- "易付通" : 支付结果通知
@enduml

@startuml
title 小程序支付
"商户APP" -> "商户小程序" : APP唤起小程序(1.1)
"商户小程序" -> "商户服务器" : 获取用户id(2.1)
"商户服务器" -> "微信服务器" : 获取用户id(3.1)
"商户服务器" <-- "微信服务器" : 返回用户id
"商户小程序" <-- "商户服务器" : 返回用户id
"商户小程序" -> "商户服务器" : 小程序支付下单(2.2)
"商户服务器" -> "易宝服务器" : 小程序支付下单(3.2)
"商户服务器" <-- "易宝服务器" : 返回支付参数
"商户小程序" <-- "商户服务器" : 返回支付参数
"商户小程序" -> "商户小程序" : 小程序唤起支付(2.3)
"商户小程序" -> "商户小程序" : 解析前端回调(2.4)
"商户APP" <- "商户小程序" : 小程序回跳APP(1.2)
@enduml

APP端：
1.1：生成商品名称goods、金额amount，唤起小程序并传入；
1.2：提供支付结果页，根据小程序端的回调信息展示；

小程序端：
2.1：调用小程序js函数获取jsCode，并请求服务端接口，获取openId；
2.2：组装商品名称、金额、openId，请求服务端接口，下单获取prepay_id；
2.3：组装3.2返回的prepay_id及其他参数，调用小程序js函数唤起支付；
2.4：解析2.3返回的回调信息，并跳转回APP相应页面；

服务端：
3.1：根据小程序传入的jsCode及其他参数，请求微信oauth2.0获取用户openId；
3.2：根据小程序传入的下单参数，及商户其他信息，调用易宝聚合支付API；













